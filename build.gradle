plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.denilsson.kafka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += sourceSets.main.output + sourceSets.test.output
			runtimeClasspath += sourceSets.main.output + sourceSets.test.output

			java.srcDir 'src/integrationTest/java'
			resources.srcDir 'src/integrationTest/resources'
		}
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
	implementation 'org.slf4j:slf4j-api'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	integrationTestImplementation 'org.assertj:assertj-core:3.24.2'
	integrationTestImplementation 'org.testcontainers:kafka:1.17.6'
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
	integrationTestImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

task integrationTest(type: Test) {
	description = "Run integration tests"
	group = "verification"
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	outputs.upToDateWhen { false }
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events("passed", "skipped", "failed")
	}
}

tasks.named('integrationTest') {
	useJUnitPlatform()
	testLogging {
		events("passed", "skipped", "failed")
	}
}


check.dependsOn integrationTest
integrationTest.mustRunAfter test